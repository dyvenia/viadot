name: "Publish Docker image"
# Publish the viadot Docker image with specified tags.
run-name: "Deploy viadot:${{ github.event.inputs.tag }} image (@${{ github.actor }})"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to use for the image."
        required: true
        default: "dev"
      if_databricks:
        description: "Whether to install Databricks source dependencies."
        required: false
        default: "false"
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish viadot-lite image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          target: viadot-lite
          tags: ghcr.io/${{ github.repository }}/viadot-lite:${{ github.event.inputs.tag }}

      - name: Build and publish viadot-aws image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          target: viadot-aws
          tags: ghcr.io/${{ github.repository }}/viadot-aws:${{ github.event.inputs.tag }}

      - name: Build and publish viadot-azure image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          target: viadot-azure
          tags: ghcr.io/${{ github.repository }}/viadot-azure:${{ github.event.inputs.tag }}
          build-args: INSTALL_DATABRICKS=${{ github.event.inputs.if_databricks }}
          