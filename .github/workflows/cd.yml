name: Release

on:
  push:
    tags:
      - "v2.*.*" # Match tags that begin with "v2".

  workflow_dispatch:
    inputs:
      version:
        description: The release version (vMAJOR.MINOR.PATCH).
        required: true

jobs:
  build-distribution:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install pypa/build
        run: python3 -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI 🚀
    needs:
      - build-distribution
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/viadot2
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-docker-images:
    name: Publish Docker images 🐳
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve the version
        id: var
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
          version=$(git describe --tags --abbrev=0)
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          version="${{ github.event.inputs.version }}"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          # Strip the "v" prefix for the image tag.
          tag=$(echo $version | sed -e 's/^v//')
          echo "tag=$tag" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish viadot-lite image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          target: viadot-lite
          tags: ghcr.io/${{ github.repository }}/viadot-lite:${{ steps.var.outputs.tag }}

      - name: Build and publish viadot-aws image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          target: viadot-aws
          tags: ghcr.io/${{ github.repository }}/viadot-aws:${{ steps.var.outputs.tag }}

      - name: Build and publish viadot-azure image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          target: viadot-azure
          tags: ghcr.io/${{ github.repository }}/viadot-azure:${{ steps.var.outputs.tag }}
          build-args: INSTALL_DATABRICKS=false
