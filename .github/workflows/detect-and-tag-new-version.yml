# Detect if package version has been bumped & if so, trigger a release.

# Take the version from pyproject.toml and check if a git tag for this version exists.
# If not, trigger the release worfklow (cd.yml) by pushing a new tag to the repository.

name: Detect and tag new version

on:
  push:
    branches:
      - "2.0"

  workflow_dispatch:

jobs:
  check-version-and-push-tag:
    name: Detect and create a tag for new version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rye
        uses: eifinger/setup-rye@v4

      - name: Get package version from pyproject.toml
        id: get-version
        run: echo "version=$(rye version)" >> $GITHUB_OUTPUT

      - name: Check if a tag for this version already exists in the repo
        uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: v${{ steps.get-version.outputs.version }}

      - name: Set up git user
        # Note: we cannot use the default user here or things like fregante/setup-git-user@v1
        # because this will magically not trigger the cd.yml workflow (it turns out the on:push:tags
        # trigger does not work for tags pushed by the GitHub Actions bot).
        run: |
          git config --global user.email "ludovico@dyvenia.com"
          git config --global user.name "Ludovico Bot"

      - name: Publish the new tag
        # Trigger the cd.yml workflow if a new tag is detected.
        if: steps.check-tag.outputs.exists != 'true'
        run: |
          git tag -a v${{ steps.get-version.outputs.version }} -m "Release v${{ steps.get-version.outputs.version }}"
          git push origin v${{ steps.get-version.outputs.version }}
